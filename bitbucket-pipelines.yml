pipelines:
  default:
    - step:
        name: Bundling software
        script:
          - bash ./gradlew build
        artifacts:
          - build/distributions/*.tar

  branches:
    release/*:
      - step:
          name: Bundling software
          script:
            - bash ./gradlew build
          artifacts:
            - build/distributions/*.tar
      - parallel:
          - step:
              name: Building AMD-64 image
              services:
                - docker
              script:
                - export `grep version gradle.properties`
                - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
                - docker build -t gjong/amd64-fintrack:$version --build-arg BASE_IMAGE=openjdk:15 --build-arg BUILD_VERSION=$version .
                - docker push gjong/amd64-fintrack:$version
          - step:
              name: Building armhf image
              script:
                - export `grep version gradle.properties`
                - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
                - docker build -t gjong/armhf-fintrack:$version --build-arg BASE_IMAGE=arm64v8/openjdk:15 --build-arg BUILD_VERSION=$version
                - docker push gjong/armhf-fintrack:$version

