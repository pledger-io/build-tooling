pipelines:
  default:
    - step:
        name: Bundling software
        script:
          - bash ./gradlew build installDist
        artifacts:
          - build/distributions/*.tar
          - build/install

  branches:
    release/*:
      - step:
          name: Bundling software
          caches:
            - gradle
          script:
            - bash ./gradlew build installDist
          artifacts:
            - build/distributions/*.tar
            - build/install
      - parallel:
        - step:
            name: Building AMD-64 image
            services:
              - docker
            script:
              - export `grep version gradle.properties`
              - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
              - docker build -t gjong/amd64-fintrack:$version --build-arg BASE_IMAGE=openjdk:15-oracle --build-arg BUILD_VERSION=$version .
              - docker push gjong/amd64-fintrack:$version
        - step:
            name: Building standalone
            caches:
              - gradle
              - node
            script:
              - bash ./gradlew buildElectron
            artifacts:
              - build/bundle/*.exe
              - build/bundle/*.snap

definitions:
  services:
    docker:
      memory: 2048
